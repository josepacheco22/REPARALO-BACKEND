// <auto-generated />
using System;
using Data.REPARALO.ConnectDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.REPARALO.Migrations
{
    [DbContext(typeof(DBReparalo))]
    [Migration("20230505030409_DBReparaloInit")]
    partial class DBReparaloInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Data.REPARALO.Clients.MCLIENT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int?>("MCITYId")
                        .HasColumnType("int");

                    b.Property<int?>("MCOUNTRYId")
                        .HasColumnType("int");

                    b.Property<int?>("MDOCUMENTTYPEId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTATEId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MCITYId");

                    b.HasIndex("MCOUNTRYId");

                    b.HasIndex("MDOCUMENTTYPEId");

                    b.HasIndex("MSTATEId");

                    b.ToTable("CLIENT", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MCITY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("MSTATEId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MSTATEId");

                    b.ToTable("CITY", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MCOUNTRY", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("COUNTRY", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MDOCUMENTTYPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("Max")
                        .HasColumnType("int");

                    b.Property<int?>("Min")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DOCUMENTTYPE", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MEQUIPMENTTYPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EQUIPMENTTYPE", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MORDENTYPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ORDENTYPE", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MSTATE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("MCOUNTRYId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MCOUNTRYId");

                    b.ToTable("STATE", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MTRADEMARK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TRADEMARK", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.RepairOrder.MREPAIRORDER", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Accessories")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IMEI1")
                        .HasColumnType("longtext");

                    b.Property<string>("IMEI2")
                        .HasColumnType("longtext");

                    b.Property<int?>("MCLIENTId")
                        .HasColumnType("int");

                    b.Property<int?>("MEQUIPMENTTYPEId")
                        .HasColumnType("int");

                    b.Property<int?>("MORDENTYPEId")
                        .HasColumnType("int");

                    b.Property<int?>("MTRADEMARKId")
                        .HasColumnType("int");

                    b.Property<int?>("MUSERAssignedId")
                        .HasColumnType("int");

                    b.Property<int?>("MUSERCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Symptoms")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MCLIENTId");

                    b.HasIndex("MEQUIPMENTTYPEId");

                    b.HasIndex("MORDENTYPEId");

                    b.HasIndex("MTRADEMARKId");

                    b.HasIndex("MUSERAssignedId");

                    b.HasIndex("MUSERCreatedId");

                    b.ToTable("REPAIRORDER", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.Users.MUSER", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("Data.REPARALO.Clients.MCLIENT", b =>
                {
                    b.HasOne("Data.REPARALO.LIstBox.MCITY", "MCITY")
                        .WithMany()
                        .HasForeignKey("MCITYId");

                    b.HasOne("Data.REPARALO.LIstBox.MCOUNTRY", "MCOUNTRY")
                        .WithMany()
                        .HasForeignKey("MCOUNTRYId");

                    b.HasOne("Data.REPARALO.LIstBox.MDOCUMENTTYPE", "MDOCUMENTTYPE")
                        .WithMany()
                        .HasForeignKey("MDOCUMENTTYPEId");

                    b.HasOne("Data.REPARALO.LIstBox.MSTATE", "MSTATE")
                        .WithMany()
                        .HasForeignKey("MSTATEId");

                    b.Navigation("MCITY");

                    b.Navigation("MCOUNTRY");

                    b.Navigation("MDOCUMENTTYPE");

                    b.Navigation("MSTATE");
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MCITY", b =>
                {
                    b.HasOne("Data.REPARALO.LIstBox.MSTATE", null)
                        .WithMany("MCITY")
                        .HasForeignKey("MSTATEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MSTATE", b =>
                {
                    b.HasOne("Data.REPARALO.LIstBox.MCOUNTRY", null)
                        .WithMany("MSTATE")
                        .HasForeignKey("MCOUNTRYId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.REPARALO.RepairOrder.MREPAIRORDER", b =>
                {
                    b.HasOne("Data.REPARALO.Clients.MCLIENT", "MCLIENT")
                        .WithMany()
                        .HasForeignKey("MCLIENTId");

                    b.HasOne("Data.REPARALO.LIstBox.MEQUIPMENTTYPE", "MEQUIPMENTTYPE")
                        .WithMany()
                        .HasForeignKey("MEQUIPMENTTYPEId");

                    b.HasOne("Data.REPARALO.LIstBox.MORDENTYPE", "MORDENTYPE")
                        .WithMany()
                        .HasForeignKey("MORDENTYPEId");

                    b.HasOne("Data.REPARALO.LIstBox.MTRADEMARK", "MTRADEMARK")
                        .WithMany()
                        .HasForeignKey("MTRADEMARKId");

                    b.HasOne("Data.REPARALO.Users.MUSER", "MUSERAssigned")
                        .WithMany()
                        .HasForeignKey("MUSERAssignedId");

                    b.HasOne("Data.REPARALO.Users.MUSER", "MUSERCreated")
                        .WithMany()
                        .HasForeignKey("MUSERCreatedId");

                    b.Navigation("MCLIENT");

                    b.Navigation("MEQUIPMENTTYPE");

                    b.Navigation("MORDENTYPE");

                    b.Navigation("MTRADEMARK");

                    b.Navigation("MUSERAssigned");

                    b.Navigation("MUSERCreated");
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MCOUNTRY", b =>
                {
                    b.Navigation("MSTATE");
                });

            modelBuilder.Entity("Data.REPARALO.LIstBox.MSTATE", b =>
                {
                    b.Navigation("MCITY");
                });
#pragma warning restore 612, 618
        }
    }
}
